@model Web.Models.RegisterViewModel
@using BotDetect.Web.Mvc;
@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/Layout.cshtml";
}
<link href="@BotDetect.Web.CaptchaUrls.Absolute.LayoutStyleSheetUrl" rel="stylesheet" type="text/css" />
<div class="banner1">
    <div class="container">
        <h3><a href="/">Trang chủ</a> / <span>Tạo tài khoản</span></h3>
    </div>
</div>
<!--banner-->
<!--login-->
<div class="login">
    <div class="main-agileits">
        <div class="form-w3agile form1">
            <h3>Tạo tài khoản</h3>
            @using (Html.BeginForm("Register", "Account", FormMethod.Post))
            {
                @Html.AntiForgeryToken();
                @Html.ValidationSummary(true,"", new { @class = "text-danger" })

                if (ViewData["SuccessMsg"] != null)
                {
                    <div class="alert alert-success" role="alert">
                        <strong>Chúc mừng bạn! </strong> đã <span>@ViewData["SuccessMsg"]</span>
                        <br />Vui lòng click <a href="/dang-nhap.html">vào đây </a>để đăng nhập.
                    </div>
                }

                @Html.LabelFor(m => m.FullName, new { @class = "control-label" })
                <div class="key">
                    <i class="fa fa-users" aria-hidden="true"></i>
                    @Html.TextBoxFor(m => m.FullName, new { @placeholder = "Họ tên" })
                    @Html.ValidationMessageFor(m => m.FullName, "", new { @class = "text-danger" })
                    <div class="clearfix"></div>
                </div>

                @Html.LabelFor(m => m.UserName, new { @class = "control-label" })
                <div class="key">
                    <i class="fa fa-user" aria-hidden="true"></i>
                    @Html.TextBoxFor(m => m.UserName, new { @placeholder = "Tài khoản" })
                    @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "text-danger" })
                    <div class="clearfix"></div>
                </div>

                @Html.LabelFor(m => m.Email, new { @class = "control-label" })
                <div class="key">
                    <i class="fa fa-envelope" aria-hidden="true"></i>
                    @Html.TextBoxFor(m => m.Email, new { @placeholder = "Email" })
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                    <div class="clearfix"></div>
                </div>

                @Html.LabelFor(m => m.Password, new { @class = "control-label" })
                <div class="key">
                    <i class="fa fa-lock" aria-hidden="true"></i>
                    @Html.PasswordFor(m => m.Password, new { @placeholder = "Mật khẩu" })
                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                    <div class="clearfix"></div>
                </div>

                @Html.LabelFor(m => m.ConfirmPassword, new { @class = "control-label" })
                <div class="key">
                    <i class="fa fa-lock" aria-hidden="true"></i>
                    @Html.PasswordFor(m => m.ConfirmPassword, new { @placeholder = "Xác nhận mật khẩu" })
                    @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                    <div class="clearfix"></div>
                </div>
                @Html.LabelFor(m => m.Address, new { @class = "control-label" })
                <div class="key">
                    <i class="fa fa-map-marker" aria-hidden="true"></i>
                    @Html.TextBoxFor(m => m.Address, new { @placeholder = "Địa chỉ" })
                    <div class="clearfix"></div>
                </div>

                @Html.LabelFor(m => m.PhoneNumber, new { @class = "control-label" })
                <div class="key">
                    <i class="fa fa-phone" aria-hidden="true"></i>
                    @Html.TextBoxFor(m => m.PhoneNumber, new { @placeholder = "Số điện thoại" })
                    @Html.ValidationMessageFor(m => m.PhoneNumber, "", new { @class = "text-danger" })
                    <div class="clearfix"></div>
                </div>
                <div>
                   
                    @{MvcCaptcha exampleCaptcha = new MvcCaptcha("ExampleCaptcha");
                    }
                    @Html.Captcha(exampleCaptcha)<br />
                    @Html.TextBox("CaptchaCode")<br />
                    @Html.ValidationMessage("CaptchaCode", "", new { @class = "text-danger" })
                </div><br />
               
                <div class="clearfix"></div>

                <input type="submit" value="Đăng ký">

            }
        </div>

    </div>
</div>
<!--login-->
